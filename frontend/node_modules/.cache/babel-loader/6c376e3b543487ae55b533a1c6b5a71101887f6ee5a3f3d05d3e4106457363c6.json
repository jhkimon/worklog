{"ast":null,"code":"import axios from 'axios';\n\n// Axios 인스턴스 생성\nconst API = axios.create({\n  baseURL: 'http://127.0.0.1:8000/',\n  // Django 서버의 기본 URL\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Axios 요청 전에 회원 / 비회원 확인\nAPI.interceptors.request.use(async config => {\n  // 회원 로직\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport default API;","map":{"version":3,"names":["axios","API","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject"],"sources":["/Users/jhkim/Desktop/NEXT/project/product-day/main/frontend/src/utils/API.js"],"sourcesContent":["import axios from 'axios';\n\n// Axios 인스턴스 생성\nconst API = axios.create({\n    baseURL: 'http://127.0.0.1:8000/', // Django 서버의 기본 URL\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Axios 요청 전에 회원 / 비회원 확인\nAPI.interceptors.request.use(\n    async (config) => {\n        // 회원 로직\n        const token = localStorage.getItem('authToken');\n        if (token) {\n            config.headers['Authorization'] = `Token ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\nexport default API;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE,wBAAwB;EAAE;EACnCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACxB,MAAOC,MAAM,IAAK;EACd;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,SAASK,KAAK,EAAE;EACtD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAI,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}