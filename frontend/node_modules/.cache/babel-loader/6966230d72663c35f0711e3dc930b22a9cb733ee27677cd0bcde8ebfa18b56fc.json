{"ast":null,"code":"var _jsxFileName = \"/Users/jhkim/Desktop/NEXT/project/product-day/main/frontend/src/components/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\n\n// 회원만 들어갈 수 있는 페이지\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element: Component,\n  ...rest\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('authToken'));\n  const [showWarning, setShowWarning] = useState(false);\n  useEffect(() => {\n    const checkAuth = () => {\n      const authToken = localStorage.getItem('authToken');\n      setIsAuthenticated(!!authToken);\n    };\n    checkAuth();\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        checkAuth();\n        if (!isAuthenticated) {\n          setShowWarning(true);\n        }\n      }\n    };\n    window.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => {\n      window.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [isAuthenticated]);\n  const handleAlertDismiss = () => {\n    setShowWarning(false);\n  };\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, {\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this) : showWarning && /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [alert('로그인 이후 접속 가능합니다.'), /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(ProtectedRoute, \"rE8euaCU4UsR3JZR4kzU0y0H4qY=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","element","Component","rest","_s","isAuthenticated","setIsAuthenticated","localStorage","getItem","showWarning","setShowWarning","checkAuth","authToken","handleVisibilityChange","document","hidden","window","addEventListener","removeEventListener","handleAlertDismiss","fileName","_jsxFileName","lineNumber","columnNumber","children","alert","to","_c","$RefreshReg$"],"sources":["/Users/jhkim/Desktop/NEXT/project/product-day/main/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\n\n// 회원만 들어갈 수 있는 페이지\nconst ProtectedRoute = ({ element: Component, ...rest }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('authToken'));\n    const [showWarning, setShowWarning] = useState(false);\n\n    useEffect(() => {\n        const checkAuth = () => {\n            const authToken = localStorage.getItem('authToken');\n            setIsAuthenticated(!!authToken);\n        };\n\n        checkAuth();\n\n        const handleVisibilityChange = () => {\n            if (!document.hidden) {\n                checkAuth();\n                if (!isAuthenticated) {\n                    setShowWarning(true);\n                }\n            }\n        };\n\n        window.addEventListener('visibilitychange', handleVisibilityChange);\n\n        return () => {\n            window.removeEventListener('visibilitychange', handleVisibilityChange);\n        };\n    }, [isAuthenticated]);\n\n    const handleAlertDismiss = () => {\n        setShowWarning(false);\n    };\n\n    return isAuthenticated ? (\n        <Component {...rest} />\n    ) : (\n        showWarning && (\n            <>\n                {alert('로그인 이후 접속 가능합니다.')}\n                <Navigate to=\"/login\" />\n            </>\n        )\n    );\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAACc,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;EAC3F,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACZ,MAAMiB,SAAS,GAAGA,CAAA,KAAM;MACpB,MAAMC,SAAS,GAAGL,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MACnDF,kBAAkB,CAAC,CAAC,CAACM,SAAS,CAAC;IACnC,CAAC;IAEDD,SAAS,CAAC,CAAC;IAEX,MAAME,sBAAsB,GAAGA,CAAA,KAAM;MACjC,IAAI,CAACC,QAAQ,CAACC,MAAM,EAAE;QAClBJ,SAAS,CAAC,CAAC;QACX,IAAI,CAACN,eAAe,EAAE;UAClBK,cAAc,CAAC,IAAI,CAAC;QACxB;MACJ;IACJ,CAAC;IAEDM,MAAM,CAACC,gBAAgB,CAAC,kBAAkB,EAAEJ,sBAAsB,CAAC;IAEnE,OAAO,MAAM;MACTG,MAAM,CAACE,mBAAmB,CAAC,kBAAkB,EAAEL,sBAAsB,CAAC;IAC1E,CAAC;EACL,CAAC,EAAE,CAACR,eAAe,CAAC,CAAC;EAErB,MAAMc,kBAAkB,GAAGA,CAAA,KAAM;IAC7BT,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,OAAOL,eAAe,gBAClBR,OAAA,CAACK,SAAS;IAAA,GAAKC;EAAI;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC,GAEvBd,WAAW,iBACPZ,OAAA,CAAAE,SAAA;IAAAyB,QAAA,GACKC,KAAK,CAAC,kBAAkB,CAAC,eAC1B5B,OAAA,CAACF,QAAQ;MAAC+B,EAAE,EAAC;IAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC1B,CAET;AACL,CAAC;AAACnB,EAAA,CA1CIJ,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}